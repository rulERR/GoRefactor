package refactoring

type RefactoringError struct{
	
	Code int
	ErrorType string
	Message string
}

func (err RefactoringError) String() string{
	return err.ErrorType + ": " + err.Message;
}

func PositionError(pos token.Position) RefactoringError{
	return RefactoringError{1,"position error", "no entity found at position "+ pos.Filename + " " + pos.Line + ":" + pos.Column};
}

func UnrenamableIdentifierError(name string, isGoSrc bool) RefactoringError{
	s:= "";
	if isGoSrc{	s = "Identifier is declared in go src package."}
	return RefactoringError{2,"unrenamable identifier error", "identifier " + name +" can not be renamed. " + s};
}

func ParsingError(packageName string) RefactoringError{
	
	return RefactoringError{3,"parsing error", "an error occured while parsing package " + name + "."};
}

func ArgumentError(parameterName string) RefactoringError{
	
	return RefactoringError{4,"argument error", "parameter "+ parameterName +" has invalid value."};
}